/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      setExprFieldsDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

expressions
(
    U
    {
        field       U;
        dimensions  [0 1 -1 0 0 0 0];

        variables
        (
	 "ak=0.25"
	 "lamb=0.05"
	 "c=0.288269779844963"
	 "k=2*pi()/lamb"
	 "a=ak/k"
	 "x=pos().x()"
	 "z=pos().z()"
	"theta=k*x"
	 //"eta=a*((1-1./16.*sqr(ak))*cos(theta)+0.5*ak*cos(2*theta)+0.375*sqr(ak)*cos(3*theta))"
	 "eta=1/k*(ak*cos(theta)+1./2*pow(ak,2)*cos(2*theta)+3./8*pow(ak,3)*(cos(3*theta)-cos(theta))+1./3*pow(ak,4)*(cos(2*theta)+cos(4*theta))+1./384*pow(ak,5)*(-422*cos(theta)+297*cos(3*theta)+125*cos(5*theta)))"
	"isW = (z <= eta) ? 1.0 : 0.0"
	"g=9.81"
	 );

        condition
        #{
	  (pos().z() <= 10.0)
        #};

        expression
        #{
            vector
            (
	     isW*(c+sqrt(g/pow(k,3))*(-k*(1.0+1./2*pow(ak,2)+1./8*pow(ak,4))+ak*k*exp(k*z)*cos(theta)-1./2*pow(ak,3)*exp(k*z)*k*cos(theta)+1./2*pow(ak,4)*exp(2*k*z)*2*k*cos(2*theta)+pow(ak,5)*(-37./24*exp(k*z)*k*cos(theta)+1./12*exp(3*k*z)*3*k*cos(3*theta)))),
	     0,
	     isW*sqrt(g/pow(k,3))*(ak*k*exp(k*z)*sin(theta)-1./2*pow(ak,3)*exp(k*z)*k*sin(theta)+1./2*pow(ak,4)*exp(2*k*z)*2*k*sin(2*theta)+pow(ak,5)*(-37./24*exp(k*z)*k*sin(theta)+1./12*exp(3*k*z)*3*k*sin(3*theta)))
	     )#};
    }

    alpha.water
    {
        field       alpha.water;
        dimensions  [0 0 0 0 0 0 0];

        variables
        (
	 "ak=0.25"
	 "lamb=0.05"
	 "k=2*pi()/lamb"
	 "a=ak/k"
	 "x=pos().x()"
	 "z=pos().z()"
	 "theta=k*x"
	 //"eta=a*((1-1./16.*sqr(ak))*cos(theta)+0.5*ak*cos(2*theta)+0.375*sqr(ak)*cos(3*theta))"
	 "eta=1/k*(ak*cos(theta)+1./2*pow(ak,2)*cos(2*theta)+3./8*pow(ak,3)*(cos(3*theta)-cos(theta))+1./3*pow(ak,4)*(cos(2*theta)+cos(4*theta))+1./384*pow(ak,5)*(-422*cos(theta)+297*cos(3*theta)+125*cos(5*theta)))"
	 "isW = (z <= eta) ? 1 : 0"
	 );

        condition
        #{
	  (pos().z() <= 10.0)
        #};

        expression
        #{
	     isW	   
	  #};
    }


    p_rgh
    {
        field       p_rgh;
	dimensions [1 -1 -2 0 0 0 0];
        variables
        (
	 "ak=0.25"
	 "lamb=0.05"
	 "c=0.288269779844963"
	 "k=2*pi()/lamb"
	 "a=ak/k"
	 "x=pos().x()"
	 "z=pos().z()"
	 "g=9.81"
	 "rho=1000"
	 "theta=k*x"
	 "eta=1/k*(ak*cos(theta)+1./2*pow(ak,2)*cos(2*theta)+3./8*pow(ak,3)*(cos(3*theta)-cos(theta))+1./3*pow(ak,4)*(cos(2*theta)+cos(4*theta))+1./384*pow(ak,5)*(-422*cos(theta)+297*cos(3*theta)+125*cos(5*theta)))"
	 "u=c+sqrt(g/pow(k,3))*(-k*(1.0+1./2*pow(ak,2)+1./8*pow(ak,4))+ak*k*exp(k*z)*cos(theta)-1./2*pow(ak,3)*exp(k*z)*k*cos(theta)+1./2*pow(ak,4)*exp(2*k*z)*2*k*cos(2*theta)+pow(ak,5)*(-37./24*exp(k*z)*k*cos(theta)+1./12*exp(3*k*z)*3*k*cos(3*theta)))"
	 "w=sqrt(g/pow(k,3))*(ak*k*exp(k*z)*sin(theta)-1./2*pow(ak,3)*exp(k*z)*k*sin(theta)+1./2*pow(ak,4)*exp(2*k*z)*2*k*sin(2*theta)+pow(ak,5)*(-37./24*exp(k*z)*k*sin(theta)+1./12*exp(3*k*z)*3*k*sin(3*theta)))"
	"isW = (z <= eta) ? 1.0 : 0.0"
	 );

        condition
        #{
	  (pos().z() <= 10.0)
        #};

        expression
        #{
	  isW*(rho*g/k*(1./2-k*z+1./2*sqr(ak)+1./4*pow(ak,4))-rho/2*(sqr(u)+sqr(w))+rho*g*z)
	  #};
    }



);

// ************************************************************************* //
