/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "alpha.phase1.*"
    {

	advectionScheme isoAdvection; //MULESScheme;
	reconstructionScheme mycCartesian; //youngCartesian; //plicRDF; // isoAlpha; // isoAlpha
	//reconstructionScheme plicRDF; // isoAlpha; // isoAlpha

	isoFaceTol      1e-10;
	surfCellTol     1e-8;
	nAlphaBounds    3;
	snapTol         1e-12;
	clip            true;
	//writeSurfCells  true;
	//writeBoundedCells true;
	writeIsoFaces   false;
	//reconstructionScheme isoAlpha;
	
	nAlphaCorr      1;
	nAlphaSubCycles 1;
	cAlpha          1;
	

	/*reconstructionScheme isoAlpha;
        // isoAdvector parameters
        isoFaceTol      1e-6;
        surfCellTol     1e-6;
        nAlphaBounds    3;
        snapTol         1e-12;
        clip            true;
        gradAlphaNormal false;
        // MULES parameters
        nAlphaCorr      2;
        cAlpha          1;
        icAlpha         0;
        MULESCorr       yes;
        nLimiterIter    3;
        alphaApplyPrevCorr yes;
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-8;
        relTol          0;
        minIter         1;
        // parameters read by both isoAdvector and MULES
        nAlphaSubCycles 1;*/
    }

    
    /*    pcorr
    {
        solver          GAMG;
        smoother        DIC;
        tolerance       1e-10;
        relTol          0;
    }

    pcorrFinal
    {
        $pcorr;
        relTol          0;
    }

    p_rgh
    {
        solver          GAMG;
        smoother        DIC;
        tolerance       1e-07;
        relTol          0.001;
    }

    p_rghFinal
    {
        $p_rgh;
        tolerance       1e-10; 
        relTol          0;
	}*/

    "pcorr.*"
    {
        solver          PCG;
        //preconditioner  FDIC;
	preconditioner
	  {
	  preconditioner  GAMG;
	  tolerance       1e-03;
	  relTol          0;
	  nVcycles        2;
	  smoother        DICGaussSeidel;
	  nPreSweeps      2;
	  }
        tolerance       1e-9;
        relTol          0;
	}

    p_rgh
    {
        solver          PCG;
        preconditioner  FDIC;
	preconditioner
        {
	  preconditioner  GAMG;
	  tolerance       1e-03;
	  relTol          0;
	  nVcycles        2;
	  smoother        DICGaussSeidel;
	  nPreSweeps      2;
	  }
        tolerance       1e-08;
        relTol          0.0001;
	minIter         2;
    }

    p_rghFinal
    {
      solver          PCG;
      preconditioner  FDIC;
      preconditioner
        {
	  preconditioner  GAMG;
	  tolerance       1e-03;
	  relTol          0;
	  nVcycles        2;
	  smoother        DICGaussSeidel;
	  nPreSweeps      2;
	  }
      tolerance       1e-12;
      relTol         1e-6;
    }

    "(U|k|epsilon).*"
    {
      //solver          smoothSolver;
      //smoother        symGaussSeidel;
      //tolerance       1e-07;
      solver          PBiCG;
      preconditioner  DILU;
      smoother        GaussSeidel;
      tolerance       1e-8;
      relTol          0;
    }
}

PIMPLE
{
    momentumPredictor   yes;
    nOuterCorrectors    1;
    nCorrectors         4;
    nNonOrthogonalCorrectors 0;
    pRefCell            0;
    pRefValue           0;
}

relaxationFactors
{
    equations
    {
        ".*"            1;
    }
}

// ************************************************************************* //
